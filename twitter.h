/* twitter.h generated by valac 0.14.0, the Vala compiler, do not modify */


#ifndef __TWITTER_H__
#define __TWITTER_H__

#include <glib.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <gee.h>
#include <json-glib/json-glib.h>

G_BEGIN_DECLS


#define TYPE_TWITTER (twitter_get_type ())
#define TWITTER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_TWITTER, Twitter))
#define TWITTER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_TWITTER, TwitterClass))
#define IS_TWITTER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_TWITTER))
#define IS_TWITTER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_TWITTER))
#define TWITTER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_TWITTER, TwitterClass))

typedef struct _Twitter Twitter;
typedef struct _TwitterClass TwitterClass;
typedef struct _TwitterPrivate TwitterPrivate;

struct _Twitter {
	GTypeInstance parent_instance;
	volatile int ref_count;
	TwitterPrivate * priv;
};

struct _TwitterClass {
	GTypeClass parent_class;
	void (*finalize) (Twitter *self);
};


gpointer twitter_ref (gpointer instance);
void twitter_unref (gpointer instance);
GParamSpec* param_spec_twitter (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void value_set_twitter (GValue* value, gpointer v_object);
void value_take_twitter (GValue* value, gpointer v_object);
gpointer value_get_twitter (const GValue* value);
GType twitter_get_type (void) G_GNUC_CONST;
Twitter* twitter_new (void);
Twitter* twitter_construct (GType object_type);
void twitter_init (Twitter* self, const gchar* token, const gchar* token_secret);
void twitter_getAccessToken_A (Twitter* self);
GeeMap* twitter_getAccessToken_B (Twitter* self, const gchar* pin);
JsonParser* twitter_home_timeline (Twitter* self);


G_END_DECLS

#endif
